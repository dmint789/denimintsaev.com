version: '3'
services:
  mongo:
    container_name: dm-mongo
    image: mongo
    networks:
      - denimintsaev
    ports:
      - "${MONGO_PORT}:27017"
    volumes:
      - db-data:/data/db:rw
    environment: 
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ADMIN_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ADMIN_PASSWORD}
      - MONGO_INITDB_DATABASE=denimintsaev
    restart: unless-stopped
  mongo-express:
    container_name: dm-mongo-express
    image: mongo-express
    networks:
      - denimintsaev
    ports:
      - "${ME_PORT}:8081"
    environment: 
      - ME_CONFIG_MONGODB_SERVER=dm-mongo
      - ME_CONFIG_MONGODB_PORT=${MONGO_PORT}
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=false
      - ME_CONFIG_MONGODB_AUTH_DATABASE=admin
      - ME_CONFIG_MONGODB_AUTH_USERNAME=${MONGO_ADMIN_USERNAME}
      - ME_CONFIG_MONGODB_AUTH_PASSWORD=${MONGO_ADMIN_PASSWORD}
      - ME_CONFIG_BASICAUTH_USERNAME=${ME_BASICAUTH_USERNAME}
      - ME_CONFIG_BASICAUTH_PASSWORD=${ME_BASICAUTH_PASSWORD}
    depends_on:
      - mongo
    restart: unless-stopped
  dm-server:
    container_name: denimintsaev
    image: denimintsaev:0.0.1
    build: .
    networks:
      - denimintsaev
    ports:
      # Map host's port (left) to container's port (right)
      - 3000:3000
    environment:
      - MONGODB_URI=mongodb://${MONGO_ADMIN_USERNAME}:${MONGO_ADMIN_PASSWORD}@dm-mongo:${MONGO_PORT}
    depends_on:
      - mongo
    restart: unless-stopped
networks:
  denimintsaev:
volumes:
  db-data:
    # Tells docker to create the storage for the volume on the local file system
    driver: local
